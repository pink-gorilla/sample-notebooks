;; gorilla-repl.fileformat = 2

;; @@ [meta]
{:tags "clj,bug,demo,Renderable", :name "image-render", :tagline "html image renderable"}

;; @@

;; **
;;;  # html image test
;;; 
;;; This test explores how custom-html can be rendered in gorilla
;; **

;; @@ [clj]
; Automatically Download Dependencies (if they are not installed already) 
 (use '[pinkgorilla.helper]) 
 (pinkgorilla.helper/add-dependencies '[pinkgorilla.ui.gorilla-plot "0.8.6"])
;; @@
;; =>
;;; ["^ ","~:type","list-like","~:open",["span",["^ ","~:class","clj-map"],"{"],"~:close",["span",["^ ","^2","clj-map"],"}"],"~:separator",["span",", "],"~:items",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","~:content",["span",["^ ","^2","clj-symbol"],"pinkgorilla.ui.gorilla-plot"],"~:value","pinkgorilla.ui.gorilla-plot"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.8.6\""],"^7","\"0.8.6\""]],"^7","[pinkgorilla.ui.gorilla-plot \"0.8.6\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"pinkgorilla.ui.gorilla-renderable"],"^7","pinkgorilla.ui.gorilla-renderable"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.0.10\""],"^7","\"2.0.10\""]],"^7","[pinkgorilla.ui.gorilla-renderable \"2.0.10\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/clojure"],"^7","org.clojure/clojure"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.9.0-alpha14\""],"^7","\"1.9.0-alpha14\""]],"^7","[org.clojure/clojure \"1.9.0-alpha14\"]"]],"^7","#{[pinkgorilla.ui.gorilla-renderable \"2.0.10\"] [org.clojure/clojure \"1.9.0-alpha14\"]}"]],"^7","[[pinkgorilla.ui.gorilla-plot \"0.8.6\"] #{[pinkgorilla.ui.gorilla-renderable \"2.0.10\"] [org.clojure/clojure \"1.9.0-alpha14\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/clojure"],"^7","org.clojure/clojure"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.9.0-alpha14\""],"^7","\"1.9.0-alpha14\""]],"^7","[org.clojure/clojure \"1.9.0-alpha14\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/clojure \"1.9.0-alpha14\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"pinkgorilla.ui.gorilla-renderable"],"^7","pinkgorilla.ui.gorilla-renderable"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.0.10\""],"^7","\"2.0.10\""]],"^7","[pinkgorilla.ui.gorilla-renderable \"2.0.10\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"hiccup"],"^7","hiccup"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.0.5\""],"^7","\"1.0.5\""]],"^7","[hiccup \"1.0.5\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/data.json"],"^7","org.clojure/data.json"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.6\""],"^7","\"0.2.6\""]],"^7","[org.clojure/data.json \"0.2.6\"]"]],"^7","#{[hiccup \"1.0.5\"] [org.clojure/data.json \"0.2.6\"]}"]],"^7","[[pinkgorilla.ui.gorilla-renderable \"2.0.10\"] #{[hiccup \"1.0.5\"] [org.clojure/data.json \"0.2.6\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/data.json"],"^7","org.clojure/data.json"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.6\""],"^7","\"0.2.6\""]],"^7","[org.clojure/data.json \"0.2.6\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/data.json \"0.2.6\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"hiccup"],"^7","hiccup"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.0.5\""],"^7","\"1.0.5\""]],"^7","[hiccup \"1.0.5\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[hiccup \"1.0.5\"] nil]"]],"^7","{[pinkgorilla.ui.gorilla-plot \"0.8.6\"] #{[pinkgorilla.ui.gorilla-renderable \"2.0.10\"] [org.clojure/clojure \"1.9.0-alpha14\"]}, [org.clojure/clojure \"1.9.0-alpha14\"] nil, [pinkgorilla.ui.gorilla-renderable \"2.0.10\"] #{[hiccup \"1.0.5\"] [org.clojure/data.json \"0.2.6\"]}, [org.clojure/data.json \"0.2.6\"] nil, [hiccup \"1.0.5\"] nil}"]
;; <=

;; @@ [clj]
; Define Namespace for your notebook and require namespaces 
(ns nested-spider
  (:require 
     [pinkgorilla.ui.hiccup :refer [html!]] 
     [pinkgorilla.ui.vega :refer [vega!]] 
     [pinkgorilla.ui.gorilla-plot.core :refer [list-plot bar-chart compose histogram plot]]
   [pinkgorilla.ui.gorilla-renderable :refer [Renderable render]])) 
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
(defrecord Image [url])
(defn image 
  [url]
  (html! [:img {:src url :height 100 :width 100 :alt "it's an image"}]))
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-var"],"#'nested-spider/image"],"~:value","#'nested-spider/image"]
;; <=

;; @@ [clj]
(extend-type Image
  Renderable
  (render [self]
          {:type :html
           :content (image (:url self))
           ;:value (pr-str self)
           }))
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
(Image. "https://cdn.mos.cms.futurecdn.net/yyvvM9kwaVGySFE6aXXoJL-320-80.jpg")
;; @@

;; @@ [clj]
(println (image "https://pbs.twimg.com/profile_images/641353910561566720/VSxsyxs7.jpg"))
;; @@
;; ->
;;; #object[pinkgorilla.ui.hiccup$html_BANG_$reify__70539 0x479c63ce pinkgorilla.ui.hiccup$html_BANG_$reify__70539@479c63ce]
;; <-
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]

;; @@
;; ->
;;; 
;; <-
