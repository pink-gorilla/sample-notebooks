;; gorilla-repl.fileformat = 2

;; @@ [meta]
{:name "", :tagline "Video Demo (Youtube, and more)", :tags "cljs,cool,ui,video,youtube", :description ""}

;; @@

;; **
;;; # Video demo
;; **

;; @@ [cljs]
(ns video-demo
  (:require 
   [pinkgorilla.shadow] 
   [module$node_modules$moment$moment]
   [reagent.core :as r]
   [pinkgorilla.ui.player :refer [player]]
   )) 

;; @@
;; ->
;;; shadow cljs eval started.. type: data: nil
;; <-
;; =>
;;; ["^ ","~:type","~:html","~:content",["~:span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [cljs]
(pinkgorilla.kernel.cljs-tools/r! [player "https://www.youtube.com/watch?v=-6BsiVyC1kM"])
;; @@
;; ->
;;; shadow cljs eval started.. type: data: #object[pinkgorilla.kernel.cljs-tools.t_pinkgorilla$kernel$cljs_tools88631]
;; <-
;; =>
;;; ["^ ","~:type","~:reagent-cljs","~:content",["^ "]]
;; <=

;; **
;;; # convenience: meta info to render to reagent:
;; **

;; @@ [cljs]
^:r [player "https://www.youtube.com/watch?v=-6BsiVyC1kM"]
;; @@
;; ->
;;; shadow cljs eval started.. type: data: [#object[pinkgorilla$ui$player$player] "https://www.youtube.com/watch?v=-6BsiVyC1kM"]
;; <-
;; =>
;;; ["^ ","~:type","~:reagent-cljs"]
;; <=

;; @@ [clj]

;; @@
;; ->
;;; 
;; <-
;; =>
;;; ["^ ","~:type","html","~:value",["~:span"]]
;; <=
